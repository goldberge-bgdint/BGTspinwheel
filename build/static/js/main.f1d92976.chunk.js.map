{"version":3,"sources":["spinningmain/Spinningmain.jsx","spinningwheel/Spinningwheel.jsx","index.js"],"names":["Spinningmain","_useState","useState","_useState2","Object","slicedToArray","sheetstatus","setsheetstatus","react_default","a","createElement","className","data-v-f6e7f13a","id","data-image-width","data-image-height","src","alt","onClick","document","getElementById","value","window","location","href","alert","viewBox","x","y","style","width","height","d","class","for","type","name","onChange","e","preventDefault","target","files","reader","FileReader","onload","data","result","workbook","xlsx","sheetName","SheetNames","worksheet","Sheets","json","sheet_to_json","dummysheet","forEach","arr","values","c","push","localStorage","setItem","JSON","stringify","readAsArrayBuffer","error","aria-describedby","Spinningwheel","_Component","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","list","parse","getItem","radius","rotate","easeOut","angle","top","offset","net","spinning","topPosition","num","topSpot","degreesOff","Math","PI","setState","spin","randomSpin","floor","random","setTimeout","getResult","_this$state","netRotation","travel","count","reset","createClass","key","renderWheel","numOptions","arcSize","i","text","renderSector","getColor","index","start","arc","color","canvas","ctx","getContext","startAngle","endAngle","baseSize","textRadius","beginPath","lineWidth","strokeStyle","font","fillStyle","stroke","save","translate","cos","sin","fillText","measureText","restore","r","g","b","data-v-f7311458","transform","WebkitTransform","WebkitTransition","position","right","fontWeight","fontSize","Component","App","dist","react_router_dist","path","element","spinningmain_Spinningmain","spinningwheel_Spinningwheel","React","rootElement","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.f1d92976.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport \"./BGDspinner.scoped.css\"\nimport \"./nicepage.scoped.css\"\nimport * as xlsx from \"xlsx\";\n\nfunction Spinningmain() {\n\n  let [sheetstatus,setsheetstatus] = useState (\"invalid\")\n  // let [attendencesheet,setattendencesheet] =  useState ([])\n\n  const readUploadFile = (e) => {\n    e.preventDefault();\n    try {\n\n      if (e.target.files) {\n        // converting to json\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = e.target.result;\n            const workbook = xlsx.read(data, { type: \"array\" });\n            const sheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[sheetName];\n            const json = xlsx.utils.sheet_to_json(worksheet);\n            let dummysheet = []  \n\n            // filtering names\n            json.forEach(e=>{\n             let arr = Object.values(e)\n             arr.forEach(c=>{\n              if(c==\"On Time\")\n              {\n                if(arr[2]!=\"Hafiz Nabeel Zia\" && arr[2]!=\"Ibtesam Moatisim Khan\" && arr[2]!=\"Muhammad Aziz\" )\n                {\n                  dummysheet.push(arr[2])\n                }\n                else\n                return 0\n              }\n             })\n            })\n\n            // parsing list\n            window.localStorage.setItem('participents',JSON.stringify(dummysheet));\n            setsheetstatus(\"valid\")\n\n        };\n        reader.readAsArrayBuffer(e.target.files[0]);\n      }\n      \n    } catch (error) {\n      alert(\"Unknown error! Please try again\")\n      setsheetstatus(\"invalid\")\n    }\n\n    }\n\n  let validatesheet = ( )=>{\n\n    if(sheetstatus!=\"invalid\")\n    {\n        document.getElementById(\"upload\").value = '';  \n        window.location.href = \"/bgdspinner\"\n\n    }\n    else\n    {\n      alert(\"Please submit valid attendence sheet\")\n    }\n\n  }\n\n  return (\n    <div className='u-body u-xl-mode' >\n\n  <section className=\"u-clearfix u-section-1\" id=\"sec-bd6f\">\n  <div className=\"u-container-style u-expanded-width u-group u-image u-image-1\" data-image-width={1193} data-image-height={676}>\n    <div className=\"u-container-layout u-container-layout-1\">\n      <img className=\"u-image u-image-contain u-image-default u-image-2\" src=\"images/Group.png\" alt data-image-width={670} data-image-height={590} />\n      <h4 className=\"u-text u-text-custom-color-1 u-text-default u-text-1\">BGD Spin Wheel</h4>\n      <p className=\"u-text u-text-custom-color-1 u-text-default u-text-2\">1st come win more</p>\n      <a onClick={validatesheet} className=\"u-btn u-btn-round u-button-style u-hover-palette-1-light-2 u-palette-1-base u-radius-2 u-btn-1\">Submit&nbsp;<span className=\"u-icon u-text-white\"><svg className=\"u-svg-content\" viewBox=\"0 0 512 512\" x=\"0px\" y=\"0px\" style={{width: '1em', height: '1em'}}><path d=\"M506.134,241.843c-0.006-0.006-0.011-0.013-0.018-0.019l-104.504-104c-7.829-7.791-20.492-7.762-28.285,0.068 c-7.792,7.829-7.762,20.492,0.067,28.284L443.558,236H20c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h423.557 l-70.162,69.824c-7.829,7.792-7.859,20.455-0.067,28.284c7.793,7.831,20.457,7.858,28.285,0.068l104.504-104 c0.006-.006,0.011-.013,0.018-.019C513.968,262.339,513.943,249.635,506.134,241.843z\" /></svg><img /></span>\n      </a>\n      <div className=\"u-container-style u-group u-group-2\">\n    \n      <div class=\"mb-3\">\n        <label for=\"\" class=\"form-label\">Choose attendence file</label>\n\n        <input\n        type=\"file\" \n        class=\"form-control\"\n        name=\"upload\"\n        id=\"upload\"\n        onChange={readUploadFile}\n        aria-describedby=\"fileHelpId\"/>\n\n        <div id=\"fileHelpId\" class=\"form-text\">Biomatric generated attendence sheet*</div>\n      </div>\n\n      </div>\n    </div>\n  </div>\n  </section>\n\n    </div>\n  )\n}\n\nexport default Spinningmain","import React, { Component } from 'react'\nimport \"./styles.css\"\nimport \"./BGDspinner.scoped.css\"\nimport \"./nicepage.scoped.css\"\n\nexport class Spinningwheel extends Component {\n\n  \n    state = {\n\n        list : JSON.parse ( window.localStorage.getItem('participents')),\n       \n        radius: 75, // PIXELS\n        rotate: 0, // DEGREES\n        easeOut: 0, // SECONDS\n        angle: 0, // RADIANS\n        top: null, // INDEX\n        offset: null, // RADIANS\n        net: null, // RADIANS\n        result: null, // INDEX\n        spinning: false\n        \n      };\n      \n    \n      componentDidMount() {\n        // generate canvas wheel on load\n        // console.log(\"lists:\",window.localStorage.getItem('user'))\n        // console.log( 'list:', window.localStorage.getItem('participents'))\n        this.renderWheel();\n      }\n    \n      renderWheel() {\n        // determine number/size of sectors that need to created\n        let numOptions = this.state.list.length;\n        let arcSize = (2 * Math.PI) / numOptions;\n        this.setState({\n          angle: arcSize\n        });\n    \n        // get index of starting position of selector\n        this.topPosition(numOptions, arcSize);\n    \n        // dynamically generate sectors from state list\n        let angle = 0;\n        for (let i = 0; i < numOptions; i++) {\n          let text = this.state.list[i];\n          this.renderSector(i + 1, text, angle, arcSize, this.getColor());\n          angle += arcSize;\n        }\n      }\n    \n      topPosition = (num, angle) => {\n        // set starting index and angle offset based on list length\n        // works upto 9 options\n        let topSpot = null;\n        let degreesOff = null;\n        if (num === 9) {\n          topSpot = 7;\n          degreesOff = Math.PI / 2 - angle * 2;\n        } else if (num === 8) {\n          topSpot = 6;\n          degreesOff = 0;\n        } else if (num <= 7 && num > 4) {\n          topSpot = num - 1;\n          degreesOff = Math.PI / 2 - angle;\n        } else if (num === 4) {\n          topSpot = num - 1;\n          degreesOff = 0;\n        } else if (num <= 3) {\n          topSpot = num;\n          degreesOff = Math.PI / 2;\n        }\n    \n        this.setState({\n          top: topSpot - 1,\n          offset: degreesOff\n        });\n      };\n    \n      renderSector(index, text, start, arc, color) {\n        // create canvas arc for each list element\n        let canvas = document.getElementById(\"wheel\");\n        let ctx = canvas.getContext(\"2d\");\n        let x = canvas.width / 2;\n        let y = canvas.height / 2;\n        let radius = this.state.radius;\n        let startAngle = start;\n        let endAngle = start + arc;\n        let angle = index * arc;\n        let baseSize = radius * 3.33;\n        let textRadius = baseSize - 130;\n    \n        ctx.beginPath();\n        ctx.arc(x, y, radius, startAngle, endAngle, false);\n        ctx.lineWidth = radius * 2;\n        ctx.strokeStyle = color;\n    \n        ctx.font = \"9px Arial\";\n        ctx.fillStyle = \"black\";\n        ctx.stroke();\n    \n        ctx.save();\n        ctx.translate(\n          baseSize + Math.cos(angle - arc / 2) * textRadius,\n          baseSize + Math.sin(angle - arc / 2) * textRadius\n        );\n        ctx.rotate(angle - arc / 2 + Math.PI / 2);\n        ctx.fillText(text, -ctx.measureText(text).width / 2, 0);\n        ctx.restore();\n      }\n    \n      getColor() {\n        // randomly generate rbg values for wheel sectors\n        let r = Math.floor(Math.random() * 255);\n        let g = Math.floor(Math.random() * 255);\n        let b = Math.floor(Math.random() * 255);\n        return `rgba(${r},${g},${b},0.4)`;\n      }\n    \n      spin = () => {\n        // set random spin degree and ease out time\n        // set state variables to initiate animation\n        let randomSpin = Math.floor(Math.random() * 900) + 500;\n        this.setState({\n          rotate: randomSpin,\n          easeOut: 2,\n          spinning: true\n        });\n    \n        // calcalute result after wheel stops spinning\n        setTimeout(() => {\n          this.getResult(randomSpin);\n        }, 2000);\n      };\n    \n      getResult = spin => {\n        // find net rotation and add to offset angle\n        // repeat substraction of inner angle amount from total distance traversed\n        // use count as an index to find value of result from state list\n        const { angle, top, offset, list } = this.state;\n        let netRotation = ((spin % 360) * Math.PI) / 180; // RADIANS\n        let travel = netRotation + offset;\n        let count = top + 1;\n        while (travel > 0) {\n          travel = travel - angle;\n          count--;\n        }\n        let result;\n        if (count >= 0) {\n          result = count;\n        } else {\n          result = list.length + count;\n        }\n    \n        // set state variable to display result\n        this.setState({\n          net: netRotation,\n          result: result\n        });\n      };\n    \n      reset = () => {\n        // reset wheel and result\n        this.setState({\n          rotate: 0,\n          easeOut: 0,\n          result: null,\n          spinning: false\n        });\n      };\n\n  render() {\n    return (\n        <div className=\"u-body u-xl-mode\">\n     \n\n    <div>\n  <section className=\"u-clearfix u-custom-color-4 u-section-1\" id=\"sec-1b4d\">\n    <div className=\"u-clearfix u-expanded-width u-layout-wrap u-layout-wrap-1\">\n      <div className=\"u-layout\">\n        <div className=\"u-layout-row\">\n          <div className=\"u-container-style u-layout-cell u-size-35 u-layout-cell-1\">\n            <div className=\"u-container-layout u-container-layout-1\">\n\n        \n<span id=\"selector\"> <img src=\"images/arrow.png\" style={{ height: \"70px\" , transform: \"rotate(77deg)\" }} alt=\"\" /> </span>\n<canvas\n  id=\"wheel\"\n  width=\"500\"\n  height=\"500\"\n  style={{\n    WebkitTransform: `rotate(${this.state.rotate}deg)`,\n    WebkitTransition: `-webkit-transform ${\n      this.state.easeOut\n    }s ease-out`\n  }}\n/>\n\n<img src=\"images/pillar.png\" style={{\n\nheight: \"176px\",\nposition: \"absolute\",\ntop: \"419px\",\nright: \"513px\"\n\n}}   alt=\"\" />\n\n{this.state.spinning ? (\n  <button type=\"button\" id=\"reset\" onClick={this.reset}>\n    reset\n  </button>\n) : (\n  <button type=\"button\" id=\"spin\" onClick={this.spin}>\n    spin\n  </button>\n)}\n\n            </div>\n          </div>\n          <div className=\"u-container-style u-layout-cell u-size-25 u-layout-cell-2\">\n            <div className=\"u-container-layout u-valign-middle u-container-layout-2\">\n              <h4 className=\"u-text u-text-default u-text-1\">\n                <span style={{fontWeight: 700, fontSize: '2.25rem'}}>BGD Spinner</span>\n                <br />\n              </h4>\n              <div className=\"u-container-style u-custom-color-1 u-expanded-width u-group u-radius-12 u-shape-round u-group-1 shadow \">\n                <div className=\"u-container-layout u-container-layout-3\">\n                  <h5 className=\"u-text u-text-default u-text-white u-text-2\">Winner</h5>\n                  <p className='resulttext' >{ this.state.list[this.state.result] } </p>\n                </div>\n              </div>\n              <a href=\"/\" id='backicon' className=\"u-active-none u-btn u-button-style u-hover-none u-none u-text-hover-palette-2-base u-text-palette-1-base u-btn-2\"><span className=\"u-file-icon u-icon u-text-custom-color-1\"><img src=\"images/507257-7d3ee33e.png\" alt /></span>&nbsp;Go Back\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n</div>\n\n\n        \n      </div>  \n    \n      \n    )\n  }\n}\n\nexport default Spinningwheel\n\n\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Spinningmain from \"./spinningmain/Spinningmain.jsx\";\nimport Spinningwheel from \"./spinningwheel/Spinningwheel.jsx\";\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n      <BrowserRouter >\n      <Routes>\n\n          <Route path=\"/\" element={<Spinningmain />} /> \n          <Route path=\"/bgdspinner\" element={<Spinningwheel />} /> \n        \n      </Routes>\n    </BrowserRouter>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}